{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome This project was created to teach children how to program a self-built robot. The Human Controlled Robot, HuCon for short, is able to program in two ways. Depending on the individuals programming skills. For beginners, it is recommended to describe the running program with Blockly. Once you have gained experience, the HuCon can be programmed with python. The robot can be programmed over a simple web interface. All you need is a modern browser. This ensures independence from the users' system. The interface is optimized for the use with a PC or a tablet, but it will work on smart-phones, too. We made sure that the interfaces were Arduino compatible. This allows you to use standard products that don't cost much money. We wish you a lot of fun programming your HuCon robot.","title":"Home"},{"location":"#welcome","text":"This project was created to teach children how to program a self-built robot. The Human Controlled Robot, HuCon for short, is able to program in two ways. Depending on the individuals programming skills. For beginners, it is recommended to describe the running program with Blockly. Once you have gained experience, the HuCon can be programmed with python. The robot can be programmed over a simple web interface. All you need is a modern browser. This ensures independence from the users' system. The interface is optimized for the use with a PC or a tablet, but it will work on smart-phones, too. We made sure that the interfaces were Arduino compatible. This allows you to use standard products that don't cost much money. We wish you a lot of fun programming your HuCon robot.","title":"Welcome"},{"location":"hardware/","text":"Hardware Power supply In order for your robot to do his job, he needs power. He gets this power via a USB cable from your PC or a cell phone charger. Some USB PowerBanks are also usable, so that he can go even further away from a power charger or the PC. Attention With some notebooks, unfortunately, there can sometimes be problems once servos are connected. Under full load the servos might need so much current that your robot can no longer be supplied sufficiently with power. In this case you have to disconnect the servo from your robot and restart it. In this case you may lose your whole program! Reset button On the side of your robot there is a button. You cannot program this button. It is a reset button. With it, you can restart your robot if it does not react at all. But since it has always reacted since its first blinking, we assume that you will never need it. LED The head of your robot has four LEDs, all of which you can program. In the examples, we've always considered these to be eyes, but you can define that differently, of course. Servo/ motors You can connect up to eight servos/motors to your robot. When connecting the servos/motors you have to make sure that they are connected correctly so that the current can flow in the right direction. There are small symbols on the bottom of the board that indicate how to properly connect a servo/motor. Info The standard assignment for a servo is as follows: Your HuCon also has an I\u00b2C port. This allows you to connect additional modules, such as a gyroscope.","title":"Hardware"},{"location":"hardware/#hardware","text":"","title":"Hardware"},{"location":"hardware/#power-supply","text":"In order for your robot to do his job, he needs power. He gets this power via a USB cable from your PC or a cell phone charger. Some USB PowerBanks are also usable, so that he can go even further away from a power charger or the PC. Attention With some notebooks, unfortunately, there can sometimes be problems once servos are connected. Under full load the servos might need so much current that your robot can no longer be supplied sufficiently with power. In this case you have to disconnect the servo from your robot and restart it. In this case you may lose your whole program!","title":"Power supply"},{"location":"hardware/#reset-button","text":"On the side of your robot there is a button. You cannot program this button. It is a reset button. With it, you can restart your robot if it does not react at all. But since it has always reacted since its first blinking, we assume that you will never need it.","title":"Reset button"},{"location":"hardware/#led","text":"The head of your robot has four LEDs, all of which you can program. In the examples, we've always considered these to be eyes, but you can define that differently, of course.","title":"LED"},{"location":"hardware/#servo-motors","text":"You can connect up to eight servos/motors to your robot. When connecting the servos/motors you have to make sure that they are connected correctly so that the current can flow in the right direction. There are small symbols on the bottom of the board that indicate how to properly connect a servo/motor. Info The standard assignment for a servo is as follows: Your HuCon also has an I\u00b2C port. This allows you to connect additional modules, such as a gyroscope.","title":"Servo/ motors"},{"location":"license/","text":"License Copyright (C) 2019 Basler AG All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. Neither the names of the copyright holders nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"license/#license","text":"Copyright (C) 2019 Basler AG All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. Neither the names of the copyright holders nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"getting_started/assembling/","text":"Assembling Usually your HuCon comes to you as a kit. The kit contains the following components: Omega2+ from Onion HuCon boards Pin header Attention It may be that the pin header is too long. In this case it must be shortened to the correct length of 16 pins. It is recommended to solder the pin headers to the boards before removing them of the panel. The boards can be cut with a small side cutter (or good nail scissors) at the marked places after this. The extent of separation can be removed carefully with a small file. This will let your robot stand more secure later on. Afterwards the robot can be assembled as shown in the following picture. First the boards (except the head) are assembled. On the boards there are small numbers documenting the assembly. If you look at the robot from below and all the numbers fit together, then you have put the boards together correctly. After the correct board assembly the Omega2+ is inserted into the pin headers. The SD card slot has to face upwards. The HuCon is able to stand on its own if assembled correctly and will not tip over backwards. Now all you have to do is put your head on your HuCon, and it's done.","title":"Assembling"},{"location":"getting_started/assembling/#assembling","text":"Usually your HuCon comes to you as a kit. The kit contains the following components: Omega2+ from Onion HuCon boards Pin header Attention It may be that the pin header is too long. In this case it must be shortened to the correct length of 16 pins. It is recommended to solder the pin headers to the boards before removing them of the panel. The boards can be cut with a small side cutter (or good nail scissors) at the marked places after this. The extent of separation can be removed carefully with a small file. This will let your robot stand more secure later on. Afterwards the robot can be assembled as shown in the following picture. First the boards (except the head) are assembled. On the boards there are small numbers documenting the assembly. If you look at the robot from below and all the numbers fit together, then you have put the boards together correctly. After the correct board assembly the Omega2+ is inserted into the pin headers. The SD card slot has to face upwards. The HuCon is able to stand on its own if assembled correctly and will not tip over backwards. Now all you have to do is put your head on your HuCon, and it's done.","title":"Assembling"},{"location":"getting_started/blockly/","text":"Blockly Blockly is an excellent way to learn programming. Simple blocks are connected to each other to represent a sequence of the program. To program your HuCon with the Blockly blocks you just have to click on the Blockly tile on the start page. If you don't know how to start, just have a look at the provided examples. You can open all examples and save them under a new name if you have changed them. Main menu Blocks Workspace Code Console Main menu The main menu has some sub menus to load/save your workspace or start/stop your program. Additionally, the menu can be used to show/hide the code or the log output. File Under this menu item you will find everything you need to load or save your program. If you simply want to create a new program, you can also use this menu. Start/Stop With these two buttons you can start or stop the program you have in your workspace. Console/Code Hide or show the output or the code. Just as you need it for your work. Buttons You can create your own software buttons with the event blocks. The buttons will work similar to a virtual remote control. Just click on Buttons to display the virtual remote control. Blocks On the left side you will find a menu with many blocks that you can use for programming. Workspace On the workspace your program is created. Just connect a few blocks and start your program to see what happens. You are also welcome to take a look at the included examples and try them out. Code Code is generated from the blocks on the workspace with each change. This code is executed on the HuCon. If you want to have a look at what has been generated, just fade in this area. Console The HuCon gives you a hint if your program contains an error. You can see these hints in the console output. Additionally, you can create output on the console with the print function block.","title":"Blockly"},{"location":"getting_started/blockly/#blockly","text":"Blockly is an excellent way to learn programming. Simple blocks are connected to each other to represent a sequence of the program. To program your HuCon with the Blockly blocks you just have to click on the Blockly tile on the start page. If you don't know how to start, just have a look at the provided examples. You can open all examples and save them under a new name if you have changed them. Main menu Blocks Workspace Code Console","title":"Blockly"},{"location":"getting_started/blockly/#main-menu","text":"The main menu has some sub menus to load/save your workspace or start/stop your program. Additionally, the menu can be used to show/hide the code or the log output.","title":"Main menu"},{"location":"getting_started/blockly/#file","text":"Under this menu item you will find everything you need to load or save your program. If you simply want to create a new program, you can also use this menu.","title":"File"},{"location":"getting_started/blockly/#startstop","text":"With these two buttons you can start or stop the program you have in your workspace.","title":"Start/Stop"},{"location":"getting_started/blockly/#consolecode","text":"Hide or show the output or the code. Just as you need it for your work.","title":"Console/Code"},{"location":"getting_started/blockly/#buttons","text":"You can create your own software buttons with the event blocks. The buttons will work similar to a virtual remote control. Just click on Buttons to display the virtual remote control.","title":"Buttons"},{"location":"getting_started/blockly/#blocks","text":"On the left side you will find a menu with many blocks that you can use for programming.","title":"Blocks"},{"location":"getting_started/blockly/#workspace","text":"On the workspace your program is created. Just connect a few blocks and start your program to see what happens. You are also welcome to take a look at the included examples and try them out.","title":"Workspace"},{"location":"getting_started/blockly/#code","text":"Code is generated from the blocks on the workspace with each change. This code is executed on the HuCon. If you want to have a look at what has been generated, just fade in this area.","title":"Code"},{"location":"getting_started/blockly/#console","text":"The HuCon gives you a hint if your program contains an error. You can see these hints in the console output. Additionally, you can create output on the console with the print function block.","title":"Console"},{"location":"getting_started/connect/","text":"Connect Before you can work with the HuCon, it has to be powered up and running. The power delivery can be made with a micro USB cable and a standard smartphone charger with an ampere rating of 500 milliamps. The LEDs on the head should light up/turn red shortly after supplying the power and indicate that the system is booting. The LEDs will soon show yellow and green while the web service is starting and finally turn off when your HuCon is up and ready to go. Connect to the WLAN Your HuCon provides its own network where you can log in with your PC, tablet or mobile phone. The network name always starts with Omega- XXXX . The last four characters are highlighted in bold on the back of your HuCon and the network password is always 12345678 . Your HuCon is providing a homepage on port 8080 and can be reached after you have connected to the WLAN of your HuCon at http://Omega-XXXX.local:8080 or http://192.168.3.1:8080.","title":"Connect"},{"location":"getting_started/connect/#connect","text":"Before you can work with the HuCon, it has to be powered up and running. The power delivery can be made with a micro USB cable and a standard smartphone charger with an ampere rating of 500 milliamps. The LEDs on the head should light up/turn red shortly after supplying the power and indicate that the system is booting. The LEDs will soon show yellow and green while the web service is starting and finally turn off when your HuCon is up and ready to go.","title":"Connect"},{"location":"getting_started/connect/#connect-to-the-wlan","text":"Your HuCon provides its own network where you can log in with your PC, tablet or mobile phone. The network name always starts with Omega- XXXX . The last four characters are highlighted in bold on the back of your HuCon and the network password is always 12345678 . Your HuCon is providing a homepage on port 8080 and can be reached after you have connected to the WLAN of your HuCon at http://Omega-XXXX.local:8080 or http://192.168.3.1:8080.","title":"Connect to the WLAN"},{"location":"getting_started/initial_setup/","text":"First setup What is needed: USB cable Terminal program ( MobaXterm (Windows) or screen (macOS & Linux)) Micro SD card Internet connection for downloading the HuCon image Preparation To install the new software on your HuCon you first have to download it from our GitHub repository. This can be found at https://github.com/basler/hucon/releases under Assets. Save the two files, onionIoT-[version]-hucon-[version].bin and update_flash.sh, on your SD card. Installation Assemble your HuCon and insert the SD card into the slot provided by your robot. This is located at the top of the neck of your HuCon. Then you can connect your HuCon to your computer with a USB cable. Now you can open MobaXterm and click on Sessions . The following window will open where you have to set the com-port and the speed. Warning If you do not have a USB Serial Port in your list, then you have to install the driver for the HuCon. The HuCon is equipped with a USB to serial converter from FTDI . You can find the appropriate driver here . As soon as you click on OK the following picture will appear: That is all right, too. Your robot only answers when you tell it something. Press Enter and your robot should answer. This will look similar to this: Now you are on the command line of your robot. You surely know this from other games or movies, because now you have full control over the system. To update the software of your HuCon you have to enter the following two commands in the console of MobaXterm and execute them: mount /dev/mmcblk0p1 /mnt sh /mnt/update_flash.sh After the second command there will be a lot of output on the console and your HuCon will be restarted once during this procedure. This process can take up to 5 minutes until your HuCon is ready for operation again. You can see whether your HuCon has been restarted by looking at the eye of your HuCon. As soon as the HuCon boots the eyes turn red. When the server starts to start, the eyes turn orange and when everything is ready, the eyes turn green for a short time before they go out again. Warning Please note that you are not disconnecting your HuCon from the computer all the time. Otherwise, it could be that it is broken afterwards. Manual installation If you have edited your HuCon as described above, you don't need to do anything else. But if you want to install the HuCon software by yourself, you can do it as follows: Connect to your HuCon via MobaXterm. Download the current package from github: wget https://github.com/basler_hucon/releases/download/[VERSION]/hucon-[VERSION].run -O hucon.run . Start the installation with sh hucon.run . Finally, you should reboot your HuCon with the command reboot .","title":"First setup"},{"location":"getting_started/initial_setup/#first-setup","text":"What is needed: USB cable Terminal program ( MobaXterm (Windows) or screen (macOS & Linux)) Micro SD card Internet connection for downloading the HuCon image","title":"First setup"},{"location":"getting_started/initial_setup/#preparation","text":"To install the new software on your HuCon you first have to download it from our GitHub repository. This can be found at https://github.com/basler/hucon/releases under Assets. Save the two files, onionIoT-[version]-hucon-[version].bin and update_flash.sh, on your SD card.","title":"Preparation"},{"location":"getting_started/initial_setup/#installation","text":"Assemble your HuCon and insert the SD card into the slot provided by your robot. This is located at the top of the neck of your HuCon. Then you can connect your HuCon to your computer with a USB cable. Now you can open MobaXterm and click on Sessions . The following window will open where you have to set the com-port and the speed. Warning If you do not have a USB Serial Port in your list, then you have to install the driver for the HuCon. The HuCon is equipped with a USB to serial converter from FTDI . You can find the appropriate driver here . As soon as you click on OK the following picture will appear: That is all right, too. Your robot only answers when you tell it something. Press Enter and your robot should answer. This will look similar to this: Now you are on the command line of your robot. You surely know this from other games or movies, because now you have full control over the system. To update the software of your HuCon you have to enter the following two commands in the console of MobaXterm and execute them: mount /dev/mmcblk0p1 /mnt sh /mnt/update_flash.sh After the second command there will be a lot of output on the console and your HuCon will be restarted once during this procedure. This process can take up to 5 minutes until your HuCon is ready for operation again. You can see whether your HuCon has been restarted by looking at the eye of your HuCon. As soon as the HuCon boots the eyes turn red. When the server starts to start, the eyes turn orange and when everything is ready, the eyes turn green for a short time before they go out again. Warning Please note that you are not disconnecting your HuCon from the computer all the time. Otherwise, it could be that it is broken afterwards.","title":"Installation"},{"location":"getting_started/initial_setup/#manual-installation","text":"If you have edited your HuCon as described above, you don't need to do anything else. But if you want to install the HuCon software by yourself, you can do it as follows: Connect to your HuCon via MobaXterm. Download the current package from github: wget https://github.com/basler_hucon/releases/download/[VERSION]/hucon-[VERSION].run -O hucon.run . Start the installation with sh hucon.run . Finally, you should reboot your HuCon with the command reboot .","title":"Manual installation"},{"location":"getting_started/python/","text":"Python Your HuCon uses Python internally to be able to be programmed. So if you want to get the maximum out of your robot, just use the programming language Python . On the internet you can find a lot of tutorials to learn this programming language. To program your HuCon directly in Python you just have to click on the editor tile on the start page. If you don't know how to start, just have a look at the included examples. You can open all examples and save them under a new name if you have changed them. Main menu Code Console Main menu The main menu has some submenus to load/save your workspace or start/stop your program. In addition, the menu can be used to show/hide the console output. File Under this menu item you will find everything you need to load or save your program. If you simply want to create a new program. If you simply want to create a new program, you can also use this menu. Start/Stop With these two buttons you can start or stop the program you have in your code area. Console menu item Hide or show the console. Just as you need it for your work. Buttons You can create your own software buttons with the event functions. The buttons will work similar to a virtual remote control. Just click on Buttons to display the virtual remote control. Code You can write your code directly here. If you click on the Start button the whole code will be transferred to your HuCon and executed there. Console The HuCon gives you a hint if your program contains an error. You can see these hints in the log output. Additionally, you can create your own output on the log output with the print function.","title":"Python"},{"location":"getting_started/python/#python","text":"Your HuCon uses Python internally to be able to be programmed. So if you want to get the maximum out of your robot, just use the programming language Python . On the internet you can find a lot of tutorials to learn this programming language. To program your HuCon directly in Python you just have to click on the editor tile on the start page. If you don't know how to start, just have a look at the included examples. You can open all examples and save them under a new name if you have changed them. Main menu Code Console","title":"Python"},{"location":"getting_started/python/#main-menu","text":"The main menu has some submenus to load/save your workspace or start/stop your program. In addition, the menu can be used to show/hide the console output.","title":"Main menu"},{"location":"getting_started/python/#file","text":"Under this menu item you will find everything you need to load or save your program. If you simply want to create a new program. If you simply want to create a new program, you can also use this menu.","title":"File"},{"location":"getting_started/python/#startstop","text":"With these two buttons you can start or stop the program you have in your code area.","title":"Start/Stop"},{"location":"getting_started/python/#console-menu-item","text":"Hide or show the console. Just as you need it for your work.","title":"Console menu item"},{"location":"getting_started/python/#buttons","text":"You can create your own software buttons with the event functions. The buttons will work similar to a virtual remote control. Just click on Buttons to display the virtual remote control.","title":"Buttons"},{"location":"getting_started/python/#code","text":"You can write your code directly here. If you click on the Start button the whole code will be transferred to your HuCon and executed there.","title":"Code"},{"location":"getting_started/python/#console","text":"The HuCon gives you a hint if your program contains an error. You can see these hints in the log output. Additionally, you can create your own output on the log output with the print function.","title":"Console"},{"location":"getting_started/update/","text":"Update To update your HuCon only a few steps are necessary. Connect the HuCon to a power supply or a battery (power bank) and wait until the eyes are green. After that, open your browser and go to the start page of the HuCon. There you will find the menu item Settings and below that the item Update . The update can take several minutes and during the whole process the HuCon will reboot once. Afterwards the HuCon is ready for operation again.","title":"Update"},{"location":"getting_started/update/#update","text":"To update your HuCon only a few steps are necessary. Connect the HuCon to a power supply or a battery (power bank) and wait until the eyes are green. After that, open your browser and go to the start page of the HuCon. There you will find the menu item Settings and below that the item Update . The update can take several minutes and during the whole process the HuCon will reboot once. Afterwards the HuCon is ready for operation again.","title":"Update"}]}