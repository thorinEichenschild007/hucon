{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Willkommen Dieses Projekt wurde ins Leben gerufen, um Kindern beizubringen, wie sie einen selbstgebauten Roboter programmieren. Der Human Controlled Roboter, kurz HuCon, kann auf zwei Arten programmieren. Abh\u00e4ngig von den individuellen Programmierkenntnissen. F\u00fcr Anf\u00e4nger empfiehlt es sich, das laufende Programm mit Blockly zu beschreiben. Sobald du aber Erfahrung gesammelt hast, kann der HuCon auch mit Python programmiert werden. Der Roboter kann \u00fcber eine einfache Web-Schnittstelle programmiert werden. Alles, was du ben\u00f6tigst, ist ein moderner Browser. Damit ist die Unabh\u00e4ngigkeit vom System des Benutzers gew\u00e4hrleistet. Die Schnittstelle ist f\u00fcr die Verwendung mit einem PC oder einem Tablet optimiert, funktioniert aber auch auf Smartphones. Wir haben sichergestellt, dass die Schnittstellen Arduino kompatibel sind. Dies erm\u00f6glicht dir die Verwendung von Standardprodukten, die nicht viel Geld kosten. Wir w\u00fcnschen dir viel Spa\u00df beim Programmieren deines HuCon-Roboters.","title":"Home"},{"location":"#willkommen","text":"Dieses Projekt wurde ins Leben gerufen, um Kindern beizubringen, wie sie einen selbstgebauten Roboter programmieren. Der Human Controlled Roboter, kurz HuCon, kann auf zwei Arten programmieren. Abh\u00e4ngig von den individuellen Programmierkenntnissen. F\u00fcr Anf\u00e4nger empfiehlt es sich, das laufende Programm mit Blockly zu beschreiben. Sobald du aber Erfahrung gesammelt hast, kann der HuCon auch mit Python programmiert werden. Der Roboter kann \u00fcber eine einfache Web-Schnittstelle programmiert werden. Alles, was du ben\u00f6tigst, ist ein moderner Browser. Damit ist die Unabh\u00e4ngigkeit vom System des Benutzers gew\u00e4hrleistet. Die Schnittstelle ist f\u00fcr die Verwendung mit einem PC oder einem Tablet optimiert, funktioniert aber auch auf Smartphones. Wir haben sichergestellt, dass die Schnittstellen Arduino kompatibel sind. Dies erm\u00f6glicht dir die Verwendung von Standardprodukten, die nicht viel Geld kosten. Wir w\u00fcnschen dir viel Spa\u00df beim Programmieren deines HuCon-Roboters.","title":"Willkommen"},{"location":"hardware/","text":"Hardware Spannungsversorgung Damit dein Roboter seine Arbeit verrichten kann, ben\u00f6tigt er Strom. Diesen bekommt er \u00fcber ein USB-Kabel von deinem PC oder einem Handyladeger\u00e4t. Es eignen sich auch einige USB-Powerbanks, damit er sich noch weiter von einer Steckdose oder dem PC entfernen kann. Achtung Bei einigen Notebooks kann es leider manchmal Probleme geben, sobald Servos angeschlossen sind. Diese ben\u00f6tigen, wenn sie am Anschlag sind, so viel Strom, dass dein Roboter nicht mehr ausreichend mit Strom versorgt werden kann. In diesem Fall musst du den Servo von deinem Roboter trennen und diesen neu starten. Dabei kann dann auch eventuell dein ganzes Programm verloren gehen! Reset-Taster An der Seite deines Roboters befindet sich ein Taster. Diesen kannst du nicht programmieren. Es ist ein Reset-Taster. Damit kannst du deinen Roboter neu starten lassen, wenn er einmal \u00fcberhaupt nicht mehr reagieren sollte. Da er aber seit seinem ersten Blinken immer reagiert hat, gehen wir davon aus, dass du diesen niemals ben\u00f6tigen wirst. LED Der Kopf deines Roboters hat vier LEDs, die du alle programmieren kannst. In den Beispielen haben wir diese immer als Augen betrachtet, aber das kannst du nat\u00fcrlich anders definieren. Servo/ Motoren An deinem Roboter kannst du bis zu acht Servos/ Motoren anschlie\u00dfen. Beim Anschlie\u00dfen der Servos/ Motoren musst du darauf achten, dass diese auch richtig verbunden sind damit der Strom in die richtige Richtung flie\u00dfen kann. Auf der Unterseite der Platine sind kleine Symbole, die kennzeichnen, wie ein Servo/ Motor richtig anzuschlie\u00dfen ist. Info Die Standardbelegung f\u00fcr einen Servo ist wie folgt: Dein HuCon verf\u00fcgt zus\u00e4tzlich \u00fcber einen I\u00b2C Anschluss. Damit kannst du weitere Module, wie unter anderem ein Gyroskop, anschlie\u00dfen.","title":"Hardware"},{"location":"hardware/#hardware","text":"","title":"Hardware"},{"location":"hardware/#spannungsversorgung","text":"Damit dein Roboter seine Arbeit verrichten kann, ben\u00f6tigt er Strom. Diesen bekommt er \u00fcber ein USB-Kabel von deinem PC oder einem Handyladeger\u00e4t. Es eignen sich auch einige USB-Powerbanks, damit er sich noch weiter von einer Steckdose oder dem PC entfernen kann. Achtung Bei einigen Notebooks kann es leider manchmal Probleme geben, sobald Servos angeschlossen sind. Diese ben\u00f6tigen, wenn sie am Anschlag sind, so viel Strom, dass dein Roboter nicht mehr ausreichend mit Strom versorgt werden kann. In diesem Fall musst du den Servo von deinem Roboter trennen und diesen neu starten. Dabei kann dann auch eventuell dein ganzes Programm verloren gehen!","title":"Spannungsversorgung"},{"location":"hardware/#reset-taster","text":"An der Seite deines Roboters befindet sich ein Taster. Diesen kannst du nicht programmieren. Es ist ein Reset-Taster. Damit kannst du deinen Roboter neu starten lassen, wenn er einmal \u00fcberhaupt nicht mehr reagieren sollte. Da er aber seit seinem ersten Blinken immer reagiert hat, gehen wir davon aus, dass du diesen niemals ben\u00f6tigen wirst.","title":"Reset-Taster"},{"location":"hardware/#led","text":"Der Kopf deines Roboters hat vier LEDs, die du alle programmieren kannst. In den Beispielen haben wir diese immer als Augen betrachtet, aber das kannst du nat\u00fcrlich anders definieren.","title":"LED"},{"location":"hardware/#servo-motoren","text":"An deinem Roboter kannst du bis zu acht Servos/ Motoren anschlie\u00dfen. Beim Anschlie\u00dfen der Servos/ Motoren musst du darauf achten, dass diese auch richtig verbunden sind damit der Strom in die richtige Richtung flie\u00dfen kann. Auf der Unterseite der Platine sind kleine Symbole, die kennzeichnen, wie ein Servo/ Motor richtig anzuschlie\u00dfen ist. Info Die Standardbelegung f\u00fcr einen Servo ist wie folgt: Dein HuCon verf\u00fcgt zus\u00e4tzlich \u00fcber einen I\u00b2C Anschluss. Damit kannst du weitere Module, wie unter anderem ein Gyroskop, anschlie\u00dfen.","title":"Servo/ Motoren"},{"location":"license/","text":"License Copyright (C) 2019 Basler AG All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. Neither the names of the copyright holders nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"license/#license","text":"Copyright (C) 2019 Basler AG All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. Neither the names of the copyright holders nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"getting_started/assembling/","text":"Zusammenbau Normalerweise kommt dein HuCon als Bausatz zu dir nach Hause. Der Bausatz enth\u00e4lt die folgenden Komponenten: Omega2+ von [Onion] (https://onion.io/) HuCon-Nutzen Stiftleiste Attention Es kann sein, dass die Stiftleiste zu lang ist. In diesem Fall muss sie auf die richtige L\u00e4nge von 16 Pins gek\u00fcrzt werden. Es wird empfohlen, die Stiftleisten an die Platinen anzul\u00f6ten, bevor diese aus dem Nutzen gel\u00f6st werden. Danach k\u00f6nnen die Platinen mit einem kleinen Seitenschneider (oder einer guten Nagelschere) an den markierten Stellen aufgetrennt werden. Das \u00fcberstehende Material an den Platinen kann mit einer kleinen Feile vorsichtig entfernt werden. So kann der Roboter sp\u00e4ter auch sicherer stehen. Danach kann der Roboter wie im folgenden Bild zusammengesetzt werden. Zuerst werden die Platinen (mit Ausnahme des Kopfes) zusammengebaut. Auf den Platinen befinden sich kleine Nummern, die den Zusammenbau dokumentieren. Wenn du den Roboter von unten betrachtest und alle Nummern zusammenpassen, hast du die Platinen richtig zusammengesetzt. Nach dem korrekten Zusammenbau der Platine wird der Omega2+ in die Stiftleisten eingesetzt. Der SD-Kartenschlitz muss nach oben zeigen. Der Hucon kann bei korrekter Montage von alleine stehen und kippt nicht nach hinten. Jetzt musst du nur noch den Kopf auf deinem HuCon stecken, und schon ist es geschafft.","title":"Zusammenbau"},{"location":"getting_started/assembling/#zusammenbau","text":"Normalerweise kommt dein HuCon als Bausatz zu dir nach Hause. Der Bausatz enth\u00e4lt die folgenden Komponenten: Omega2+ von [Onion] (https://onion.io/) HuCon-Nutzen Stiftleiste Attention Es kann sein, dass die Stiftleiste zu lang ist. In diesem Fall muss sie auf die richtige L\u00e4nge von 16 Pins gek\u00fcrzt werden. Es wird empfohlen, die Stiftleisten an die Platinen anzul\u00f6ten, bevor diese aus dem Nutzen gel\u00f6st werden. Danach k\u00f6nnen die Platinen mit einem kleinen Seitenschneider (oder einer guten Nagelschere) an den markierten Stellen aufgetrennt werden. Das \u00fcberstehende Material an den Platinen kann mit einer kleinen Feile vorsichtig entfernt werden. So kann der Roboter sp\u00e4ter auch sicherer stehen. Danach kann der Roboter wie im folgenden Bild zusammengesetzt werden. Zuerst werden die Platinen (mit Ausnahme des Kopfes) zusammengebaut. Auf den Platinen befinden sich kleine Nummern, die den Zusammenbau dokumentieren. Wenn du den Roboter von unten betrachtest und alle Nummern zusammenpassen, hast du die Platinen richtig zusammengesetzt. Nach dem korrekten Zusammenbau der Platine wird der Omega2+ in die Stiftleisten eingesetzt. Der SD-Kartenschlitz muss nach oben zeigen. Der Hucon kann bei korrekter Montage von alleine stehen und kippt nicht nach hinten. Jetzt musst du nur noch den Kopf auf deinem HuCon stecken, und schon ist es geschafft.","title":"Zusammenbau"},{"location":"getting_started/blockly/","text":"Blockly Blockly ist eine hervorragende M\u00f6glichkeit das Programmieren zu erlernen. Dabei werden einfache Bl\u00f6cke miteinander verbunden, um einen Ablauf des Programms darzustellen. Um deinen HuCon mit den Blockly Bl\u00f6cken zu programmieren, musst du lediglich auf die Blockly Kachel auf der Startseite klicken. Falls du nicht wei\u00dft, wie du beginnen sollst, dann schau dir einfach die mitgelieferten Beispiele an. Du kannst alle Beispiele \u00f6ffnen und unter einem neuen Namen speichern, wenn du diese ver\u00e4ndert hast. Hauptmen\u00fc Bl\u00f6cke Arbeitsfl\u00e4che Code Log-Ausgabe Hauptmen\u00fc Das Hauptmen\u00fc hat einige Unter-Men\u00fcs zum Laden/Speichern deines Arbeitsbereichs und zum Starten/Stoppen deines Programms. Zus\u00e4tzlich kann \u00fcber das Men\u00fc der Code oder die Log-Ausgabe ein- beziehungsweise ausgeblendet werden. Datei Unter diesem Men\u00fcpunkt findest du alles, um dein Programm zu laden oder zu speichern. Wenn du einfach mal ein neues Programm erstellen m\u00f6chtest, wirst du auch in diesem Men\u00fc f\u00fcndig. Start/Stop Mit diesen beiden Kn\u00f6pfen kannst du dein Programm, welches du in deinem Arbeitsbereich hast, starten oder stoppen. Ausgabe/Code Blende die Ausgabe oder den Code einfach ein oder aus. So wie du es gerade f\u00fcr deine Arbeit brauchst. Buttons Du kannst mit den Ereignis-Bl\u00f6cken eigene Software Kn\u00f6pfe erstellen. Die Kn\u00f6pfe funktionieren dann \u00e4hnlich wie eine virtuelle Fernbedienung. Klick einfach auf Buttons um die virtuelle Fernbedienung anzuzeigen. Bl\u00f6cke Auf der linken Seite findest du ein Men\u00fc mit vielen Bl\u00f6cken, die dir zum Programmieren zur Verf\u00fcgung stehen. Arbeitsfl\u00e4che Auf der Arbeitsfl\u00e4che entsteht dein Programm. Verbinde einfach ein paar Bl\u00f6cke miteinander und starte dein Programm um zu sehen was passiert. Du kannst dir auch gerne die mitgelieferten Beispiele ansehen und ausprobieren. Code Aus den Bl\u00f6cken auf der Arbeitsfl\u00e4che wird mit jeder \u00c4nderung Code generiert. Dieser wird auf dem HuCon ausgef\u00fchrt. Wenn du dir anschauen m\u00f6chtest, was erzeugt wurde, dann blende dir diesen Bereich einfach ein. Log-Ausgabe Der HuCon gibt dir einen Hinweis, wenn dein Programm einen Fehler enth\u00e4lt. Diese siehst du dann in der Log-Ausgabe. Zus\u00e4tzlich kannst du selber Ausgaben auf der Log-Ausgabe mit dem gib aus -Funktionsblock erzeugen.","title":"Blockly"},{"location":"getting_started/blockly/#blockly","text":"Blockly ist eine hervorragende M\u00f6glichkeit das Programmieren zu erlernen. Dabei werden einfache Bl\u00f6cke miteinander verbunden, um einen Ablauf des Programms darzustellen. Um deinen HuCon mit den Blockly Bl\u00f6cken zu programmieren, musst du lediglich auf die Blockly Kachel auf der Startseite klicken. Falls du nicht wei\u00dft, wie du beginnen sollst, dann schau dir einfach die mitgelieferten Beispiele an. Du kannst alle Beispiele \u00f6ffnen und unter einem neuen Namen speichern, wenn du diese ver\u00e4ndert hast. Hauptmen\u00fc Bl\u00f6cke Arbeitsfl\u00e4che Code Log-Ausgabe","title":"Blockly"},{"location":"getting_started/blockly/#hauptmenu","text":"Das Hauptmen\u00fc hat einige Unter-Men\u00fcs zum Laden/Speichern deines Arbeitsbereichs und zum Starten/Stoppen deines Programms. Zus\u00e4tzlich kann \u00fcber das Men\u00fc der Code oder die Log-Ausgabe ein- beziehungsweise ausgeblendet werden.","title":"Hauptmen\u00fc"},{"location":"getting_started/blockly/#datei","text":"Unter diesem Men\u00fcpunkt findest du alles, um dein Programm zu laden oder zu speichern. Wenn du einfach mal ein neues Programm erstellen m\u00f6chtest, wirst du auch in diesem Men\u00fc f\u00fcndig.","title":"Datei"},{"location":"getting_started/blockly/#startstop","text":"Mit diesen beiden Kn\u00f6pfen kannst du dein Programm, welches du in deinem Arbeitsbereich hast, starten oder stoppen.","title":"Start/Stop"},{"location":"getting_started/blockly/#ausgabecode","text":"Blende die Ausgabe oder den Code einfach ein oder aus. So wie du es gerade f\u00fcr deine Arbeit brauchst.","title":"Ausgabe/Code"},{"location":"getting_started/blockly/#buttons","text":"Du kannst mit den Ereignis-Bl\u00f6cken eigene Software Kn\u00f6pfe erstellen. Die Kn\u00f6pfe funktionieren dann \u00e4hnlich wie eine virtuelle Fernbedienung. Klick einfach auf Buttons um die virtuelle Fernbedienung anzuzeigen.","title":"Buttons"},{"location":"getting_started/blockly/#blocke","text":"Auf der linken Seite findest du ein Men\u00fc mit vielen Bl\u00f6cken, die dir zum Programmieren zur Verf\u00fcgung stehen.","title":"Bl\u00f6cke"},{"location":"getting_started/blockly/#arbeitsflache","text":"Auf der Arbeitsfl\u00e4che entsteht dein Programm. Verbinde einfach ein paar Bl\u00f6cke miteinander und starte dein Programm um zu sehen was passiert. Du kannst dir auch gerne die mitgelieferten Beispiele ansehen und ausprobieren.","title":"Arbeitsfl\u00e4che"},{"location":"getting_started/blockly/#code","text":"Aus den Bl\u00f6cken auf der Arbeitsfl\u00e4che wird mit jeder \u00c4nderung Code generiert. Dieser wird auf dem HuCon ausgef\u00fchrt. Wenn du dir anschauen m\u00f6chtest, was erzeugt wurde, dann blende dir diesen Bereich einfach ein.","title":"Code"},{"location":"getting_started/blockly/#log-ausgabe","text":"Der HuCon gibt dir einen Hinweis, wenn dein Programm einen Fehler enth\u00e4lt. Diese siehst du dann in der Log-Ausgabe. Zus\u00e4tzlich kannst du selber Ausgaben auf der Log-Ausgabe mit dem gib aus -Funktionsblock erzeugen.","title":"Log-Ausgabe"},{"location":"getting_started/connect/","text":"Verbindung Bevor du mit dem HuCon arbeiten kannst, muss dieser mit Strom versorgt werden. Die ben\u00f6tigte Leistung kann mit einem Mikro-USB-Kabel und ein Standard-Smartphoneladeger\u00e4t mit mindestens 2,5 Watt sichergestellt werden. Die LEDs auf dem Kopf sollten kurz nach dem Einschalten rot aufleuchten und anzeigen, dass das System hochf\u00e4hrt. Die LEDs werden bald gelb und gr\u00fcn aufleuchten, w\u00e4hrend der Webservice startet, und schlie\u00dflich erl\u00f6schen, wenn dein HuCon hochgefahren und einsatzbereit ist. Verbindung mit dem WLAN herstellen Dein HuCon stellt ein eigenes Netzwerk zur Verf\u00fcgung, in das du dich mit deinem PC, Tablet oder Mobiltelefon einloggen kannst. Der Netzwerkname beginnt immer mit Omega- XXXX . Die letzten vier Zeichen sind auf der R\u00fcckseite deines HuCon fett hervorgehoben und das Netzwerk-Passwort lautet immer 12345678 . Dein HuCon stellt eine Homepage auf Port 8080 zur Verf\u00fcgung und ist nach dem Verbinden mit dem WLAN deines HuCon unter http://Omega-XXXX.local:8080 oder http://192.168.3.1:8080 erreichbar.","title":"Verbindung"},{"location":"getting_started/connect/#verbindung","text":"Bevor du mit dem HuCon arbeiten kannst, muss dieser mit Strom versorgt werden. Die ben\u00f6tigte Leistung kann mit einem Mikro-USB-Kabel und ein Standard-Smartphoneladeger\u00e4t mit mindestens 2,5 Watt sichergestellt werden. Die LEDs auf dem Kopf sollten kurz nach dem Einschalten rot aufleuchten und anzeigen, dass das System hochf\u00e4hrt. Die LEDs werden bald gelb und gr\u00fcn aufleuchten, w\u00e4hrend der Webservice startet, und schlie\u00dflich erl\u00f6schen, wenn dein HuCon hochgefahren und einsatzbereit ist.","title":"Verbindung"},{"location":"getting_started/connect/#verbindung-mit-dem-wlan-herstellen","text":"Dein HuCon stellt ein eigenes Netzwerk zur Verf\u00fcgung, in das du dich mit deinem PC, Tablet oder Mobiltelefon einloggen kannst. Der Netzwerkname beginnt immer mit Omega- XXXX . Die letzten vier Zeichen sind auf der R\u00fcckseite deines HuCon fett hervorgehoben und das Netzwerk-Passwort lautet immer 12345678 . Dein HuCon stellt eine Homepage auf Port 8080 zur Verf\u00fcgung und ist nach dem Verbinden mit dem WLAN deines HuCon unter http://Omega-XXXX.local:8080 oder http://192.168.3.1:8080 erreichbar.","title":"Verbindung mit dem WLAN herstellen"},{"location":"getting_started/initial_setup/","text":"Inbetriebnahme Was wird ben\u00f6tigt: USB Kabel Terminal Programm ( MobaXterm (Windows) oder screen (MacOs & Linux)) Micro SD-Karte Internetverbindung zum Herunterladen des HuCon 'image' Vorbereitung Um die neue Software auf deinem HuCon zu installieren, musst du zun\u00e4chst das letzte Release aus unserem gitHub-Repository herunterladen. Dieses findest du unter https://github.com/basler/hucon/releases im Abschnitt 'Assets'. Speicher die beiden Dateien, onionIoT-[version]-hucon-[version].bin und update_flash.sh, auf deine SD-Karte. Installation Baue deinen HuCon zusammen und stecke die SD-Karte in den von deinem Roboter vorgesehenen Steckplatz. Dieser befindet sich oben am Hals deines HuCon. Dann kannst du deinen HuCon mit einem USB-Kabel an deinem Computer anschlie\u00dfen. \u00d6ffne jetzt MobaXterm und klicke auf Sessions . Es \u00f6ffnet sich das folgende Fenster, in dem du den Com-Port und die Geschwindigkeit einstellen musst. Warning Wenn du keinen USB Serial Port in deiner Liste hast, dann ist es notwendig, dass du den Treiber f\u00fcr den HuCon installierst. Der HuCon ist mit einem USB-Seriell-Wandler von FTDI ausgestattet. Den entsprechenden Treiber findest du hier . Sobald du auf OK klickst, erscheint das folgende Bild: Das ist auch in Ordnung. Dein Roboter antwortet nur, wenn du ihm etwas sagst. Dr\u00fccke Enter und dein Roboter sollte antworten. Dies wird \u00e4hnlich aussehen wie das hier: Jetzt bist du auf der Kommandozeile deines Roboters. Das kennst du sicher aus anderen Spielen oder Filmen, denn jetzt hast du die volle Kontrolle \u00fcber das System. Um die Software deines HuCon zu aktualisieren, musst du die folgenden beiden Befehle in die Konsole von MobaXterm eingeben und ausf\u00fchren: mount /dev/mmcblk0p1 /mnt sh /mnt/update_flash.sh Nach dem zweiten Befehl wird eine Menge an Text auf der Konsole ausgegeben und dein HuCon wird w\u00e4hrend dieses Vorgangs einmal neu gestartet. Es kann bis zu 5 Minuten dauern, bis dein HuCon wieder betriebsbereit ist. Ob dein HuCon neu gestartet wurde, kannst du an den Augen deines HuCon erkennen. Sobald der HuCon startet, werden die Augen rot. Wenn der interne Server startet, werden die Augen orangefarben, und wenn alles bereit ist, werden die Augen f\u00fcr kurze Zeit gr\u00fcn, bevor sie wieder erl\u00f6schen. Warning Bitte achte darauf, dass dein HuCon nicht von deinem Computer getrennt wird. Sonst k\u00f6nnte es sein, dass er danach kaputt ist. Manuelle Installation Wenn du deinen HuCon, wie oben bei der Installation beschrieben, bearbeitet hast, brauchst du nichts weiter tun. Solltest du aber die HuCon-Software selbst installieren wollen, so kannst du das wie folgt machen. Verbinde dich mittels MobaXterm mit deinem HuCon. Lade dir das aktuelle paket von github herunter: wget https://github.com/basler_hucon/releases/download/[VERSION]/hucon-[VERSION].run -O hucon.run Starte die Installation mittels sh hucon.run Zum Schluss solltest du deinen HuCon mit dem Befehl reboot neu starten.","title":"Inbetriebnahme"},{"location":"getting_started/initial_setup/#inbetriebnahme","text":"Was wird ben\u00f6tigt: USB Kabel Terminal Programm ( MobaXterm (Windows) oder screen (MacOs & Linux)) Micro SD-Karte Internetverbindung zum Herunterladen des HuCon 'image'","title":"Inbetriebnahme"},{"location":"getting_started/initial_setup/#vorbereitung","text":"Um die neue Software auf deinem HuCon zu installieren, musst du zun\u00e4chst das letzte Release aus unserem gitHub-Repository herunterladen. Dieses findest du unter https://github.com/basler/hucon/releases im Abschnitt 'Assets'. Speicher die beiden Dateien, onionIoT-[version]-hucon-[version].bin und update_flash.sh, auf deine SD-Karte.","title":"Vorbereitung"},{"location":"getting_started/initial_setup/#installation","text":"Baue deinen HuCon zusammen und stecke die SD-Karte in den von deinem Roboter vorgesehenen Steckplatz. Dieser befindet sich oben am Hals deines HuCon. Dann kannst du deinen HuCon mit einem USB-Kabel an deinem Computer anschlie\u00dfen. \u00d6ffne jetzt MobaXterm und klicke auf Sessions . Es \u00f6ffnet sich das folgende Fenster, in dem du den Com-Port und die Geschwindigkeit einstellen musst. Warning Wenn du keinen USB Serial Port in deiner Liste hast, dann ist es notwendig, dass du den Treiber f\u00fcr den HuCon installierst. Der HuCon ist mit einem USB-Seriell-Wandler von FTDI ausgestattet. Den entsprechenden Treiber findest du hier . Sobald du auf OK klickst, erscheint das folgende Bild: Das ist auch in Ordnung. Dein Roboter antwortet nur, wenn du ihm etwas sagst. Dr\u00fccke Enter und dein Roboter sollte antworten. Dies wird \u00e4hnlich aussehen wie das hier: Jetzt bist du auf der Kommandozeile deines Roboters. Das kennst du sicher aus anderen Spielen oder Filmen, denn jetzt hast du die volle Kontrolle \u00fcber das System. Um die Software deines HuCon zu aktualisieren, musst du die folgenden beiden Befehle in die Konsole von MobaXterm eingeben und ausf\u00fchren: mount /dev/mmcblk0p1 /mnt sh /mnt/update_flash.sh Nach dem zweiten Befehl wird eine Menge an Text auf der Konsole ausgegeben und dein HuCon wird w\u00e4hrend dieses Vorgangs einmal neu gestartet. Es kann bis zu 5 Minuten dauern, bis dein HuCon wieder betriebsbereit ist. Ob dein HuCon neu gestartet wurde, kannst du an den Augen deines HuCon erkennen. Sobald der HuCon startet, werden die Augen rot. Wenn der interne Server startet, werden die Augen orangefarben, und wenn alles bereit ist, werden die Augen f\u00fcr kurze Zeit gr\u00fcn, bevor sie wieder erl\u00f6schen. Warning Bitte achte darauf, dass dein HuCon nicht von deinem Computer getrennt wird. Sonst k\u00f6nnte es sein, dass er danach kaputt ist.","title":"Installation"},{"location":"getting_started/initial_setup/#manuelle-installation","text":"Wenn du deinen HuCon, wie oben bei der Installation beschrieben, bearbeitet hast, brauchst du nichts weiter tun. Solltest du aber die HuCon-Software selbst installieren wollen, so kannst du das wie folgt machen. Verbinde dich mittels MobaXterm mit deinem HuCon. Lade dir das aktuelle paket von github herunter: wget https://github.com/basler_hucon/releases/download/[VERSION]/hucon-[VERSION].run -O hucon.run Starte die Installation mittels sh hucon.run Zum Schluss solltest du deinen HuCon mit dem Befehl reboot neu starten.","title":"Manuelle Installation"},{"location":"getting_started/python/","text":"Python Dein HuCon verwendet intern Python um programmiert werden zu k\u00f6nnen. Wenn du also das Maximum aus deinem Roboter herausholen m\u00f6chtest, dann verwende einfach die Programmiersprache Python . Im Internet findest du eine Menge an Anleitungen, um diese Programmiersprache zu erlernen. Um deinen HuCon mit direkt in Python zu programmieren, musst du lediglich auf die Editor Kachel auf der Startseite klicken. Falls du nicht wei\u00dft, wie du beginnen sollst, dann schau dir einfach die mitgelieferten Beispiele an. Du kannst alle Beispiele \u00f6ffnen und unter einem neuen Namen speichern, wenn du diese ver\u00e4ndert hast. Hauptmen\u00fc Code Log-Ausgabe Hauptmen\u00fc Das Hauptmen\u00fc hat einige Unter-Men\u00fcs zum Laden/Speichern deines Arbeitsbereichs und zum Starten/Stoppen deines Programms. Zus\u00e4tzlich kann \u00fcber das Men\u00fc die Log-Ausgabe ein- beziehungsweise ausgeblendet werden. Datei Unter diesem Men\u00fcpunkt findest du alles in dein Programm zu laden oder zu speichern. Wenn du einfach mal ein neues Programm erstellen m\u00f6chtest, wirst du auch in diesem Men\u00fc f\u00fcndig. Start/Stop Mit diesen beiden Kn\u00f6pfen kannst du dein Programm, welches du in deinem Arbeitsbereich hast, starten oder stoppen. Ausgabe Blende die Ausgabe einfach ein oder aus. So wie du es gerade f\u00fcr deine Arbeit brauchst. Buttons Du kannst mit den Ereignis-Funktionen eigene Software Kn\u00f6pfe erstellen. Die Kn\u00f6pfe funktionieren dann \u00e4hnlich wie eine virtuelle Fernbedienung. Klick einfach auf Buttons um die virtuelle Fernbedienung anzuzeigen. Code Dein Code kannst du direkt hier hineinschreiben. Wenn du auf den Start Knopf klickst wird der gesamte Code auf deinen HuCon \u00fcbertragen und dort ausgef\u00fchrt. Log-Ausgabe Der HuCon gibt dir einen Hinweis, wenn dein Programm einen Fehler enth\u00e4lt. Diese Hinweise siehst du dann in der Log-Ausgabe. Zus\u00e4tzlich kannst du selber Ausgaben auf der Log-Ausgabe mit der print -Funktion erzeugen.","title":"Python"},{"location":"getting_started/python/#python","text":"Dein HuCon verwendet intern Python um programmiert werden zu k\u00f6nnen. Wenn du also das Maximum aus deinem Roboter herausholen m\u00f6chtest, dann verwende einfach die Programmiersprache Python . Im Internet findest du eine Menge an Anleitungen, um diese Programmiersprache zu erlernen. Um deinen HuCon mit direkt in Python zu programmieren, musst du lediglich auf die Editor Kachel auf der Startseite klicken. Falls du nicht wei\u00dft, wie du beginnen sollst, dann schau dir einfach die mitgelieferten Beispiele an. Du kannst alle Beispiele \u00f6ffnen und unter einem neuen Namen speichern, wenn du diese ver\u00e4ndert hast. Hauptmen\u00fc Code Log-Ausgabe","title":"Python"},{"location":"getting_started/python/#hauptmenu","text":"Das Hauptmen\u00fc hat einige Unter-Men\u00fcs zum Laden/Speichern deines Arbeitsbereichs und zum Starten/Stoppen deines Programms. Zus\u00e4tzlich kann \u00fcber das Men\u00fc die Log-Ausgabe ein- beziehungsweise ausgeblendet werden.","title":"Hauptmen\u00fc"},{"location":"getting_started/python/#datei","text":"Unter diesem Men\u00fcpunkt findest du alles in dein Programm zu laden oder zu speichern. Wenn du einfach mal ein neues Programm erstellen m\u00f6chtest, wirst du auch in diesem Men\u00fc f\u00fcndig.","title":"Datei"},{"location":"getting_started/python/#startstop","text":"Mit diesen beiden Kn\u00f6pfen kannst du dein Programm, welches du in deinem Arbeitsbereich hast, starten oder stoppen.","title":"Start/Stop"},{"location":"getting_started/python/#ausgabe","text":"Blende die Ausgabe einfach ein oder aus. So wie du es gerade f\u00fcr deine Arbeit brauchst.","title":"Ausgabe"},{"location":"getting_started/python/#buttons","text":"Du kannst mit den Ereignis-Funktionen eigene Software Kn\u00f6pfe erstellen. Die Kn\u00f6pfe funktionieren dann \u00e4hnlich wie eine virtuelle Fernbedienung. Klick einfach auf Buttons um die virtuelle Fernbedienung anzuzeigen.","title":"Buttons"},{"location":"getting_started/python/#code","text":"Dein Code kannst du direkt hier hineinschreiben. Wenn du auf den Start Knopf klickst wird der gesamte Code auf deinen HuCon \u00fcbertragen und dort ausgef\u00fchrt.","title":"Code"},{"location":"getting_started/python/#log-ausgabe","text":"Der HuCon gibt dir einen Hinweis, wenn dein Programm einen Fehler enth\u00e4lt. Diese Hinweise siehst du dann in der Log-Ausgabe. Zus\u00e4tzlich kannst du selber Ausgaben auf der Log-Ausgabe mit der print -Funktion erzeugen.","title":"Log-Ausgabe"},{"location":"getting_started/update/","text":"Aktualisierung Um deinen HuCon auf den aktuellen Stand zu bringen, sind nur wenige Schritte notwendig. Verbinde den HuCon mit einem Netzteil oder einer Batterie (Power Bank) und warte, bis die Augen gr\u00fcn aufgeleuchtet haben. Danach \u00f6ffnest du deinen Browser und gehst auf die Startseite des HuCon. Dort findest du den Men\u00fcpunkt Einstellung und darunter den Punkt Aktualisieren . Das Aktualisieren kann mehrere Minuten dauern und w\u00e4hrend des gesamten Prozesses wird dein HuCon sich einmal neu starten. Anschlie\u00dfend ist dein HuCon wieder betriebsbereit.","title":"Aktualisierung"},{"location":"getting_started/update/#aktualisierung","text":"Um deinen HuCon auf den aktuellen Stand zu bringen, sind nur wenige Schritte notwendig. Verbinde den HuCon mit einem Netzteil oder einer Batterie (Power Bank) und warte, bis die Augen gr\u00fcn aufgeleuchtet haben. Danach \u00f6ffnest du deinen Browser und gehst auf die Startseite des HuCon. Dort findest du den Men\u00fcpunkt Einstellung und darunter den Punkt Aktualisieren . Das Aktualisieren kann mehrere Minuten dauern und w\u00e4hrend des gesamten Prozesses wird dein HuCon sich einmal neu starten. Anschlie\u00dfend ist dein HuCon wieder betriebsbereit.","title":"Aktualisierung"}]}